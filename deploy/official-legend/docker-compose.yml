services:
  # Run a container that runs the setup script and generates various config files needed by the other containers
  # The current dir on the host is mounted into the container as a writable volume. Any writes by the setup script are now visible on the host
  # To avoid the files generated inside the container from being owned as root, the container is started with the user/group id of the current user (on the host)
  setup:
    profiles: ["setup", "engine", "sdlc", "depot", "query", "studio", "postgres"]
    container_name: "setup"
    image: finos/legend-engine-server:${ENGINE_IMAGE_VERSION}
    user: ${U_ID}:${G_ID}
    volumes:
      - .:/setup:rwlear
      - /etc/group:/etc/group:ro
      - /etc/passwd:/etc/passwd:ro
      - /etc/shadow:/etc/shadow:ro
    entrypoint: /setup/setup.sh
    
    environment:
      - GITLAB_HOST=${GITLAB_HOST}
      - GITLAB_APP_ID=dbdd707e51066b5b948d238bb0f84b7a7d2c883e008671c7dc33c1c5c639c862
      - GITLAB_APP_SECRET=gloas-b2f54817acd471b92aaf4d3514bcc74e7c29210457d7e774941f457cd9686501
      - ENGINE_HOST=${ENGINE_HOST}
      - MONGODB_URI=${MONGODB_URI}
      - MONGODB_NAME=${MONGODB_NAME}
      - MONGO_SESSION_ENABLED=${MONGO_SESSION_ENABLED}
      - METADATA_PURE_HOST=${METADATA_PURE_HOST}
      - METADATA_PURE_PORT=${METADATA_PURE_PORT}
      - METADATA_ALLOY_HOST=${METADATA_ALLOY_HOST}
      - METADATA_ALLOY_PORT=${METADATA_ALLOY_PORT}
      - DEPOT_STORE_HOST=${DEPOT_STORE_HOST}
      - DEPOT_STORE_PORT=${DEPOT_STORE_PORT}
  mongodb:
    profiles: ["engine", "sdlc", "depot", "query", "studio"]
    container_name: "legend-mongodb"
    image: mongo:${MONGODB_IMAGE_VERSION}
    ports:
      - ${MONGODB_PORT}:${MONGODB_PORT}
    networks:
      - legend
    environment:
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USERNAME}
    
    command: --auth
  # Servers
  legend-engine:
    profiles: ["engine", "query", "studio"]
    depends_on:
      - setup
      - mongodb
    container_name: "legend-engine"
    image: finos/legend-engine-server:${ENGINE_IMAGE_VERSION}
    
    environment:
      - GITLAB_HOST=${GITLAB_HOST}
      - GITLAB_APP_ID=dbdd707e51066b5b948d238bb0f84b7a7d2c883e008671c7dc33c1c5c639c862
      - GITLAB_APP_SECRET=gloas-b2f54817acd471b92aaf4d3514bcc74e7c29210457d7e774941f457cd9686501
      - ENGINE_HOST=${ENGINE_HOST}
      - ENGINE_PORT=${ENGINE_PORT}
      - MONGODB_URI=${MONGODB_URI}
      - MONGODB_NAME=${MONGODB_NAME}
      - MONGO_SESSION_ENABLED=${MONGO_SESSION_ENABLED}
      - METADATA_PURE_HOST=legend-depot
      - METADATA_PURE_PORT=${METADATA_PURE_PORT}
      - METADATA_ALLOY_HOST=legend-depot
      - METADATA_ALLOY_PORT=${METADATA_ALLOY_PORT}
    ports:
      - ${ENGINE_PORT}:${ENGINE_PORT}
    volumes:
      - ./z_generated/engine/config:/config
    networks:
      - legend
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://${ENGINE_HOST}:${ENGINE_PORT}/api/server/v1/info",
        ]
      start_period: 20s
      interval: 5s
      timeout: 10s
      retries: 5
  legend-sdlc:
    profiles: ["sdlc", "query", "studio"]
    depends_on:
      - setup
      - mongodb
    container_name: "legend-sdlc"
    image: finos/legend-sdlc-server:${SDLC_IMAGE_VERSION}
    
    environment:
      - GITLAB_HOST=${GITLAB_HOST}
      - GITLAB_APP_ID=dbdd707e51066b5b948d238bb0f84b7a7d2c883e008671c7dc33c1c5c639c862
      - GITLAB_APP_SECRET=gloas-b2f54817acd471b92aaf4d3514bcc74e7c29210457d7e774941f457cd9686501
      - SDLC_PORT=${SDLC_PORT}
      - SDLC_ADMIN_PORT=${SDLC_ADMIN_PORT}
      - SDLC_PROJECT_TAG=${SDLC_PROJECT_TAG}
      - MONGODB_URI=${MONGODB_URI}
      - MONGODB_NAME=${MONGODB_NAME}
      - MONGO_SESSION_ENABLED=${MONGO_SESSION_ENABLED}
      - SDLC_MAVEN_VERSION=${SDLC_MAVEN_VERSION}
      - ENGINE_MAVEN_VERSION=${ENGINE_MAVEN_VERSION}
    ports:
      - ${SDLC_PORT}:${SDLC_PORT}
    networks:
      - legend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://${SDLC_HOST}:${SDLC_PORT}/api/info"]
      start_period: 20s
      interval: 5s
      timeout: 10s
      retries: 5
  legend-depot-store:
    profiles: ["depot", "query", "studio"]
    depends_on: 
       - setup
       - mongodb
    container_name: "legend-depot-store"
    image: finos/legend-depot-store-server:${DEPOT_STORE_IMAGE_VERSION}
    
    environment:
      - GITLAB_HOST=$GITLAB_HOST
      - GITLAB_APP_ID=dbdd707e51066b5b948d238bb0f84b7a7d2c883e008671c7dc33c1c5c639c862
      - GITLAB_APP_SECRET=gloas-b2f54817acd471b92aaf4d3514bcc74e7c29210457d7e774941f457cd9686501
      - DEPOT_STORE_HOST=${DEPOT_STORE_HOST}
      - DEPOT_STORE_PORT=${DEPOT_STORE_PORT}
      - DEPOT_STORE_ADMIN_USER=${DEPOT_STORE_ADMIN_USER}
      - MONGODB_URI=${MONGODB_URI}
      - MONGODB_NAME=${MONGODB_NAME}
      - MONGO_SESSION_ENABLED=${MONGO_SESSION_ENABLED}
    ports:
      - ${DEPOT_STORE_PORT}:${DEPOT_STORE_PORT}
    volumes:
      - ./z_generated/depot-store/config:/config
    networks:
      - legend
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://${DEPOT_STORE_HOST}:${DEPOT_STORE_PORT}/depot-store/api/info",
        ]
      start_period: 20s
      interval: 5s
  legend-depot-store-setup:
    profiles: ["depot", "query", "studio"]
    depends_on:
      - setup
      - legend-depot-store
    container_name: "legend-depot-store-setup"
    image: finos/legend-engine-server:${ENGINE_IMAGE_VERSION}
    volumes:
      - ./depot-store/setup:/setup:ro
    entrypoint: /setup/setup.sh
    
    networks:
      - legend 
  legend-depot:
    profiles: ["depot", "query", "studio"]
    depends_on: 
      - setup
      - mongodb
    container_name: "legend-depot"
    image: finos/legend-depot-server:${DEPOT_IMAGE_VERSION}
    
    environment:
      - GITLAB_HOST=$GITLAB_HOST
      - GITLAB_APP_ID=dbdd707e51066b5b948d238bb0f84b7a7d2c883e008671c7dc33c1c5c639c862
      - GITLAB_APP_SECRET=gloas-b2f54817acd471b92aaf4d3514bcc74e7c29210457d7e774941f457cd9686501
      - DEPOT_HOST=${DEPOT_HOST}
      - DEPOT_PORT=${DEPOT_PORT}
      - MONGODB_URI=${MONGODB_URI}
      - MONGODB_NAME=${MONGODB_NAME}
      - MONGO_SESSION_ENABLED=${MONGO_SESSION_ENABLED}
    ports:
      - ${DEPOT_PORT}:${DEPOT_PORT}
    networks:
      - legend
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://${DEPOT_HOST}:${DEPOT_PORT}/depot/api/info",
        ]
      start_period: 20s
      interval: 5s
  # UI Clients
  legend-studio:
    profiles: ["studio", "query"]
    depends_on:
      - legend-engine
      - legend-sdlc
      - legend-depot
      - legend-depot-store
    container_name: legend-studio
    image: finos/legend-studio:${STUDIO_IMAGE_VERSION}
    
    environment:
      - GITLAB_HOST=${GITLAB_HOST}
      - GITLAB_APP_ID=dbdd707e51066b5b948d238bb0f84b7a7d2c883e008671c7dc33c1c5c639c862
      - GITLAB_APP_SECRET=gloas-b2f54817acd471b92aaf4d3514bcc74e7c29210457d7e774941f457cd9686501
      - ENGINE_HOST=${ENGINE_HOST}
      - ENGINE_PORT=${ENGINE_PORT}
      - SDLC_HOST=${SDLC_HOST}
      - SDLC_PORT=${SDLC_PORT}
      - STUDIO_PORT=${STUDIO_PORT}
      - STUDIO_HOST=${STUDIO_HOST:-localhost}
      - DEPOT_HOST=${DEPOT_HOST}
      - DEPOT_PORT=${DEPOT_PORT}
      - MONGODB_URI=${MONGODB_URI}
      - MONGODB_NAME=${MONGODB_NAME}
      - MONGO_SESSION_ENABLED=${MONGO_SESSION_ENABLED}
    ports:
      - ${STUDIO_PORT}:${STUDIO_PORT}
    networks:
      - legend
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://${STUDIO_HOST}:${STUDIO_PORT}/config/json",
        ]
      start_period: 20s
      interval: 5s
  legend-query:
    profiles: ["query"]
    depends_on:
      - setup
      - mongodb
      - legend-engine
      - legend-studio
      - legend-depot
    container_name: "legend-query"
    image: finos/legend-query:${QUERY_IMAGE_VERSION}
    
    environment:
      - GITLAB_HOST=$GITLAB_HOST
      - GITLAB_APP_ID=dbdd707e51066b5b948d238bb0f84b7a7d2c883e008671c7dc33c1c5c639c862
      - GITLAB_APP_SECRET=gloas-b2f54817acd471b92aaf4d3514bcc74e7c29210457d7e774941f457cd9686501
      - QUERY_HOST=${QUERY_HOST}
      - QUERY_PORT=${QUERY_PORT}
      - ENGINE_HOST=${ENGINE_HOST}
      - ENGINE_PORT=${ENGINE_PORT}
      - STUDIO_HOST=${STUDIO_HOST}
      - STUDIO_PORT=${STUDIO_PORT}
      - DEPOT_HOST=${DEPOT_HOST}
      - DEPOT_PORT=${DEPOT_PORT}
      - MONGODB_URI=${MONGODB_URI}
      - MONGODB_NAME=${MONGODB_NAME}
      - MONGO_SESSION_ENABLED=${MONGO_SESSION_ENABLED}
    ports:
      - ${QUERY_PORT}:${QUERY_PORT}
    networks:
      - legend
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://${QUERY_HOST}:${QUERY_PORT}/query/config.json",
        ]
      start_period: 20s
      interval: 5s
  postgres:
    profiles: ["studio", "query", "postgres"]
    depends_on:
      - setup
    container_name: "postgres"
    image: postgres:${POSTGRES_IMAGE_VERSION}
    
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD}
    ports:
      - 5432:5432
    volumes:
      - ./postgres/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
    networks:
      - legend
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready"
        ]
      start_period: 20s
      interval: 5s
  apache:
    profiles: ["graphiql"]
    image: httpd:latest
    container_name: legend-httpd
    ports:
    - 9099:80
    volumes:
    - ./graphiql:/usr/local/apache2/htdocs

networks:
  legend: {}
